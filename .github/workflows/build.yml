name: Build and Release Executables

on:
  push:
    tags:
      - "v*" # Trigger when pushing a tag like v1.0.0

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest] # Builds for Linux, macOS, Windows

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13.1"

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Create DB Directory and Check for Credentials DB
        run: |
          if [ ! -f "db/credentials.db" ]; then
            echo "Creating empty credentials.db file"
            python -c "import sqlite3; conn = sqlite3.connect('db/credentials.db'); conn.execute('CREATE TABLE IF NOT EXISTS credentials (username TEXT, password TEXT)'); conn.close()"
          fi
        shell: bash

      - name: Build Executable (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          pyinstaller --onefile --add-data "db/credentials.db:." autologin_script.py
          chmod +x dist/autologin_script

      - name: Build Executable (Windows)
        if: runner.os == 'Windows'
        run: |
          if (-not (Test-Path -Path "db\credentials.db")) {
            echo "Creating empty credentials.db file"
            python -c "import sqlite3; conn = sqlite3.connect('db/credentials.db'); conn.execute('CREATE TABLE IF NOT EXISTS credentials (username TEXT, password TEXT)'); conn.close()"
          }
          pyinstaller --onefile --add-data "db/credentials.db;." autologin_script.py
        shell: pwsh

      - name: Create Zip Archives (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          mkdir -p zip_dist
          if [ "$RUNNER_OS" == "Linux" ]; then
            cp dist/autologin_script zip_dist/autologin_script
            cd zip_dist && zip -r ../dist/autologin_script-linux.zip autologin_script
            # Remove the raw executable, keeping only the zip
            rm -f ../dist/autologin_script
          fi
          if [ "$RUNNER_OS" == "macOS" ]; then
            cp dist/autologin_script zip_dist/autologin_script
            cd zip_dist && zip -r ../dist/autologin_script-mac.zip autologin_script
            # Remove the raw executable, keeping only the zip
            rm -f ../dist/autologin_script
          fi
        shell: bash

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: autologin_script-${{ runner.os }}
          path: |
            dist/*.zip
            dist/*.exe

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build # Run after the build job

    steps:
      - name: Download all Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/**/*
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
